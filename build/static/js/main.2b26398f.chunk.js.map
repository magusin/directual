{"version":3,"sources":["auth.js","components/loader/loader.js","components/loginLogout/loginLogoutButton.js","components/menu/menu.js","pages/Page1.js","pages/Page2.js","pages/Page3.js","pages/PrivatePage.js","pages/AdminPage.js","pages/login.js","App.js","index.js"],"names":["api","Directual","apiHost","authContext","createContext","ProvideAuth","children","auth","useState","user","setUser","sessionID","setSessionID","role","setRole","useEffect","sid","window","localStorage","getItem","isAuthorize","status","token","username","login","password","then","res","setItem","isAutorised","signout","cb","logout","hasRole","roleCheck","useProvideAuth","Provider","value","useAuth","useContext","Loader","props","className","text","LogInLogOutButton","history","useHistory","loading","setLoading","Fragment","onClick","push","to","MainMenu","exact","Page1","payload","setPayload","pageInfo","setPageInfo","badRequest","setBadRequest","pageLoading","setPageLoading","pageNum","setPageNum","pageSize","structure","getData","page","response","catch","e","console","log","data","msg","map","key","id","title","src","file","description","disabled","totalPage","Page2","setResponse","setStatus","showForm","setShowForm","formPayload","setFormPayload","onSubmit","setData","result","httpCode","type","onChange","target","JSON","stringify","class","Page3","PrivatePage","AdminPage","LoginPage","location","useLocation","setUsername","setPassword","error","setError","from","state","pathname","replace","preventDefault","placeholder","PrivateRoute","rest","render","App","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b26398f.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\r\nimport Directual from 'directual-api';\r\n\r\nconst api = new Directual({apiHost: '/'});\r\n\r\nexport const authContext = createContext();\r\n\r\nexport function ProvideAuth({ children }) {\r\n  const auth = useProvideAuth();\r\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\nexport const useAuth = () => {\r\n  return useContext(authContext);\r\n};\r\n\r\n// Provide hook that creates auth object and handles state\r\nfunction useProvideAuth() {\r\n  const [user, setUser] = useState(null);\r\n  const [sessionID, setSessionID] = useState(null);\r\n  const [role, setRole] = useState(null);\r\n\r\n  const login = (username, password) => {\r\n    return api.auth.login(username, password).then(res=>{\r\n      setUser(res.username)\r\n      setSessionID(res.sessionID)\r\n      setRole(res.role)\r\n      window.localStorage.setItem('sid', res.sessionID)\r\n    })\r\n  };\r\n\r\n  const signout = (cb) => {\r\n    return api.auth.logout('').then(res=>{\r\n      setUser(null)\r\n      setRole(null)\r\n      setSessionID(null)\r\n      window.localStorage.setItem('sid', null)\r\n      cb()\r\n    })\r\n  };\r\n\r\n  const isAutorised = () => {\r\n    return !!user\r\n  }\r\n\r\n  const hasRole = (roleCheck) => {\r\n    if(!roleCheck){\r\n      return true\r\n    }\r\n    return role === roleCheck\r\n  }\r\n\r\n  useEffect(() => {\r\n    let sid = window.localStorage.getItem('sid') || ''\r\n    api.auth.isAuthorize(sid, (status, token)=>{\r\n      if(status === true){\r\n        setUser(token.username)\r\n        setSessionID(token.token)\r\n        setRole(token.role)\r\n      }\r\n    })\r\n  }, []);\r\n\r\n  return {\r\n    user,\r\n    sessionID,\r\n    login,\r\n    isAutorised,\r\n    signout,\r\n    hasRole\r\n  };\r\n}","import React from 'react'\r\nimport './loader.css'\r\n\r\nexport function Loader(props) {\r\n    return (\r\n        <div className=\"loader-wrapper\">\r\n            <div className=\"loader\"></div>\r\n            <span className=\"loader-text\">{props.text || 'Loading...'}</span>\r\n        </div>\r\n    )\r\n}","\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useAuth } from '../../auth'\r\nimport {\r\n    Link, useHistory\r\n} from 'react-router-dom'\r\n\r\nimport { Loader } from '../loader/loader';\r\n\r\nexport function LogInLogOutButton() {\r\n    let history = useHistory()\r\n    const auth = useAuth();\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setLoading(false)\r\n      }, [auth.user]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {auth.user ? (\r\n                <React.Fragment>\r\n                { !loading ? (\r\n\r\n                <button\r\n                    onClick={() => {\r\n                        auth.signout(() => history.push('/'));\r\n                        setLoading(true)\r\n                    }}\r\n                >\r\n                    Log out\r\n                </button>\r\n                \r\n                ) :\r\n                ( <Loader text='Logging out...'/> )}\r\n\r\n                </React.Fragment>\r\n\r\n            ) : (\r\n                    <Link to=\"/login\">\r\n                        <button>Log in</button></Link>\r\n                )}\r\n        </React.Fragment>)\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { LogInLogOutButton } from '../loginLogout/loginLogoutButton'\r\nimport { useAuth } from '../../auth'\r\n\r\nimport './menu.css'\r\n\r\n\r\nexport function MainMenu() {\r\n  const authContext = useAuth();\r\n  return (\r\n    <ul className=\"main-menu\">\r\n      <li>\r\n        <NavLink exact to=\"/\">Home</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink exact to=\"/page2\">Post data</NavLink>\r\n      </li>\r\n\r\n      {/* JSX visible for authorised users only */}\r\n      {authContext.isAutorised() && <li>\r\n        <NavLink exact to=\"/private\">Private Page</NavLink>\r\n      </li>}\r\n\r\n      {/* JSX visible for users, who have role == 'admin'. You can apply any other value here */}\r\n      {authContext.hasRole('admin') && <li>\r\n        <NavLink exact to=\"/admin\">Admin Page</NavLink>\r\n      </li>}\r\n      <li className=\"rihgt-top\">\r\n        <LogInLogOutButton />\r\n      </li>\r\n    </ul>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Directual from 'directual-api';\r\nimport { useAuth } from '../auth'\r\nimport { Loader } from '../components/loader/loader';\r\nimport {Card, CardBody, CardHeader, CardText, CardTitle, Container} from 'reactstrap'\r\n\r\n// Example of getting data from Directual\r\n\r\n// Connect to Directual api\r\nconst api = new Directual({ apiHost: '/' })\r\n\r\nexport default function Page1() {\r\n\r\n  // API-endpoint details\r\n  const dataStructure = 'article' // todo: write here sysname of your data structure\r\n  const endpoint = 'getArticles' // todo: write here Method name of your API-endpoint\r\n\r\n  // connect authentication context\r\n  const auth = useAuth();\r\n\r\n  // Hooks for handling state\r\n  const [payload, setPayload] = useState([]); // API response\r\n  const [pageInfo, setPageInfo] = useState({}); // API response metadata, e.g. number of objects\r\n  const [loading, setLoading] = useState(true); // initial loader\r\n  const [badRequest, setBadRequest] = useState(); // API error message\r\n  const [pageLoading, setPageLoading] = useState(false); // paging loader\r\n  const [pageNum, setPageNum] = useState(0); // Page number, by default = 0\r\n  const [pageSize, setPageSize] = useState(2); // Page size, bu default = 10\r\n\r\n  // Paging\r\n  useEffect(() => {\r\n    setPageLoading(true)\r\n    getData()\r\n  }, [pageNum])\r\n\r\n  const nextPage = () => {\r\n    setPageLoading(true)\r\n    setPageNum(pageNum + 1)\r\n  }\r\n  const prevPage = () => {\r\n    setPageLoading(true)\r\n    setPageNum(pageNum - 1)\r\n  }\r\n\r\n  // GET-request\r\n  function getData() {\r\n    api\r\n      // Data structure\r\n      .structure(dataStructure)\r\n      // GET request + query params (sessionID, page, pageSize by default)\r\n      .getData(endpoint, { sessionID: auth.sessionID, page: pageNum, pageSize: pageSize })\r\n      // other possible query params:\r\n      // {{HttpRequest}} — any param for Filtering\r\n      // sort=FIELD_SYSNAME_1,desc,FIELD_SYSNAME_2,asc — sorting with multiple params\r\n      .then((response) => {\r\n        setPayload(response.payload)\r\n        setPageInfo(response.pageInfo)\r\n        setLoading(false)\r\n        setPageLoading(false)\r\n      })\r\n      .catch((e) => {\r\n        // handling errors\r\n        setLoading(false)\r\n        setPageLoading(false)\r\n        console.log(e.response)\r\n        setBadRequest(e.response.status + ', ' + e.response.data.msg)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h1>Annonces</h1>\r\n\r\n      {loading && <Loader />}\r\n      {payload && !loading &&\r\n        <div>\r\n\r\n          {/* API response */}\r\n          {/* <div className=\"request-info\">\r\n            <span>Data structure: <b>{dataStructure ? dataStructure : <span className=\"error\">not provided</span>}</b></span>\r\n            <span>API-endpoint: <b>{endpoint ? endpoint : <span className=\"error\">not provided</span>}</b></span>\r\n            <span>Payload: <code>{JSON.stringify(payload)}</code></span>\r\n            <span>Payload info: <code>{JSON.stringify(pageInfo)}</code></span>\r\n            {badRequest && <code className=\"error\">Error: <b>{badRequest}</b></code>}\r\n          </div> */}\r\n          <Container>\r\n          {payload.map(data =>\r\n           <Card className='border-1 border-primary text-center mb-2 ' key={data.id}>\r\n             <CardHeader>\r\n               <CardTitle>\r\n               <h3 >{data.title}</h3>\r\n               </CardTitle>\r\n             </CardHeader>\r\n           <CardBody>\r\n           <img src={data.file} className='image'></img>\r\n           <CardText>\r\n             <p>{data.description}</p>\r\n           </CardText>\r\n           </CardBody>\r\n         </Card>\r\n            )}\r\n           </Container>\r\n          {/* Paging */}\r\n          {pageLoading && <Loader />}\r\n          {!pageLoading &&\r\n            <div>\r\n              <button disabled={(pageNum <= 0) && \"disabled\"} onClick={prevPage}>prev</button>\r\n              <button disabled={(badRequest || (pageNum >= pageInfo.totalPage - 1)) && \"disabled\"} onClick={nextPage}>next</button>\r\n            </div>\r\n          }\r\n\r\n        </div>}\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Directual from 'directual-api';\r\nimport { useAuth } from '../auth'\r\nimport { Loader } from '../components/loader/loader';\r\n\r\n// Example of posting data to Directual\r\n\r\n// Connect to Directual api\r\nconst api = new Directual({ apiHost: '/' })\r\n\r\nexport default function Page2() {\r\n\r\n  // API-endpoint details\r\n  const dataStructure = '' // todo: write here sysname of your data structure\r\n  const endpoint = '' // todo: write here Method name of your API-endpoint\r\n\r\n  // Connect authentication context\r\n  const auth = useAuth();\r\n\r\n  // Hooks for handling state\r\n  const [response, setResponse] = useState(); // API response\r\n  const [status, setStatus] = useState(); // Request status\r\n  const [badRequest, setBadRequest] = useState(); // API error message\r\n  const [loading, setLoading] = useState(false); // Loader\r\n  const [showForm, setShowForm] = useState(true); // Show/hide the form\r\n  const [formPayload, setFormPayload] = useState({}); // Data to send. Here we can add userID: auth.user by default\r\n\r\n  // Reset the form\r\n  const resetForm = () => {\r\n    setResponse()\r\n    setStatus()\r\n    setBadRequest()\r\n    setShowForm(true)\r\n    setFormPayload({}) // Don't forget to include userID: auth.user, if needed\r\n  }\r\n\r\n  // POST-request\r\n  function postData() {\r\n    setLoading(true)\r\n    setShowForm(false)\r\n    api\r\n      // Data structure\r\n      .structure(dataStructure)\r\n      // POST request + payload + query params:\r\n      .setData(endpoint, formPayload,\r\n        { sessionID: auth.sessionID })\r\n      .then((response) => {\r\n        setResponse(response.result)\r\n        setStatus(response.status)\r\n        setLoading(false)\r\n      })\r\n      .catch((e) => {\r\n        // handling errors\r\n        setLoading(false)\r\n        console.log(e.response)\r\n        setBadRequest({\r\n          httpCode: e.response.status,\r\n          msg: e.response.data.msg\r\n        })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h1>Example of posting data</h1>\r\n      {loading && <Loader />}\r\n      {showForm &&\r\n        <form onSubmit={postData}>\r\n          <input type=\"text\" onChange={(e) => {\r\n            // insert here your FIELD_SYSNAME\r\n            setFormPayload({ ...formPayload, 'FIELD_SYSNAME': e.target.value })\r\n          }} />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      }\r\n\r\n      {/* Everything is OK */}\r\n      {response && <div>\r\n        <b>Submitted successfully</b>\r\n        <p>Response: <code>{JSON.stringify(response)}</code></p>\r\n        {status && <p>Status: <code>{JSON.stringify(status)}</code></p>}\r\n      </div>}\r\n\r\n      {/* Something went wrong */}\r\n      {badRequest && <div class=\"error\">\r\n        <b>{badRequest.httpCode} error</b>\r\n        {(badRequest.httpCode == '400') &&\r\n          <p>API-endpoint is not configured properly.</p>}\r\n        {(badRequest.httpCode == '403') &&\r\n          <p>You have to be logged in to submit this form.</p>}\r\n        <p><code>{badRequest.msg}</code></p>\r\n      </div>}\r\n\r\n      {/* Reset the form */}\r\n      {!showForm && !loading &&\r\n        <button onClick={resetForm}>\r\n          Submit again\r\n        </button>}\r\n\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { authContext, useAuth } from '../auth'\r\n\r\nexport default function Page3() {\r\n    const authContext = useAuth();\r\n    return (\r\n        <div className=\"content\">\r\n            <h1>Page with hidden content</h1>\r\n\r\n            <p>This is <b>public</b> content. Try to login and see some hidden text!</p>\r\n\r\n            {authContext.isAutorised() &&\r\n                <p>This content is visible for <b>authorised users only</b></p>}\r\n\r\n            {authContext.hasRole('admin') &&\r\n                <p>This content is visible for a user with a <b>acertain role</b></p>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n// Example how it would look if we used class Component:\r\n// IMPORTNT: for class Components we use authContext instead of useAuth from 'auth.js'\r\n\r\n// export default class Page3 extends React.Component {\r\n//     render() {\r\n//         const authContext = this.context;\r\n//         return (\r\n//             <div className=\"content\">\r\n//                 <h1>Page with hidden content</h1>\r\n\r\n//                 <p>This is <b>public</b> content. Try to login and see some hidden text!</p>\r\n\r\n//                 {authContext.isAutorised() &&\r\n//                     <p>This content is visible for <b>authorised users only</b></p>}\r\n\r\n//                 {authContext.hasRole('admin') &&\r\n//                     <p>This content is visible for a user with a <b>acertain role</b></p>}\r\n\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n// Page3.contextType = authContext","import React from 'react'\r\n\r\nexport default function PrivatePage () {\r\n  return (\r\n    <div className=\"content\">\r\n      <h1>Private Page</h1>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function AdminPage () {\r\n  return (\r\n    <div className=\"content\">\r\n      <h1>Admin Page</h1>\r\n    </div>\r\n  )\r\n}","import { useHistory, useLocation } from 'react-router-dom'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useAuth } from '../auth'\r\n\r\nimport { Loader } from '../components/loader/loader'\r\n\r\nexport default function LoginPage () {\r\n  let history = useHistory()\r\n  let location = useLocation()\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  let { from } = location.state || { from: { pathname: '/' } }\r\n  const auth = useAuth()\r\n\r\n  useEffect(() => {\r\n    if (auth.isAutorised()) {\r\n      history.replace(from)\r\n    }\r\n  })\r\n  let login = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    auth.login(username, password).then(() => {\r\n      history.replace(from)\r\n      setLoading(false)\r\n    }).catch(e => {\r\n      setError('You login or password is incorrect')\r\n      setLoading(false)\r\n    })\r\n    return false\r\n  }\r\n\r\n  return (\r\n    <div className=\"content form\">\r\n      { /* Here is from path: */}\r\n      <form onSubmit={login}>\r\n        <p>You must log in to view the page <b>{from.pathname}</b></p>\r\n        <input type=\"text\" placeholder=\"login\" onChange={(e) => {\r\n          setUsername(e.target.value)\r\n        }}/>\r\n        <input type=\"password\" placeholder=\"password\" onChange={(e) => {\r\n          setPassword(e.target.value)\r\n        }}/>\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {!loading ? <button>Log in</button> : <Loader text='Logging in...'/>}\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  NavLink,\r\n  useHistory, useLocation,\r\n} from 'react-router-dom'\r\n\r\nimport { MainMenu } from './components/menu/menu'\r\nimport { ProvideAuth, useAuth, authContext } from './auth'\r\n\r\nimport Page1 from './pages/Page1'\r\nimport Page2 from './pages/Page2'\r\nimport Page3 from './pages/Page3'\r\nimport PrivatePage from './pages/PrivatePage'\r\nimport AdminPage from './pages/AdminPage'\r\nimport LoginPage from './pages/login'\r\n\r\nfunction PrivateRoute({ children, hasRole, ...rest }) {\r\n  const auth = useAuth();\r\n  return (\r\n      <Route\r\n          {...rest}\r\n          render={({ location }) =>\r\n              auth.isAutorised() && auth.hasRole(hasRole) ? (\r\n                  children\r\n              ) : auth.isAutorised() && !auth.hasRole(hasRole) ? <div>Access denied</div> : (\r\n                  <Redirect\r\n                      to={{\r\n                          pathname: '/login',\r\n                          state: { from: location }\r\n                      }}\r\n                  />\r\n              )\r\n          }\r\n      />\r\n  )\r\n}\r\n\r\n// This is for pages like your.app/books/the-bible, wthere 'the-bible' in nan Object ID\r\n// \r\n// const Child = ({ match }) => {\r\n//   return (\r\n//   <div>Object ID: {match.params.id}</div>\r\n//   )\r\n// } \r\n\r\nexport default function App() {\r\n  return (\r\n    <ProvideAuth>\r\n      <Router>\r\n        <MainMenu />\r\n        <Switch>\r\n\r\n         {/* Public pages */}\r\n          <Route path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Page1 />\r\n          </Route>\r\n          <Route exact path=\"/page2\">\r\n            <Page2 />\r\n          </Route>\r\n          <Route exact path=\"/page3\">\r\n            <Page3 />\r\n          </Route>\r\n          \r\n          {/* Pages for any authorised user */}\r\n          <PrivateRoute path=\"/private\">\r\n            <PrivatePage />\r\n          </PrivateRoute>\r\n          \r\n          {/* Pages for users, who have role == 'admin'. You can apply any other value here */}\r\n          <PrivateRoute path=\"/admin\" hasRole={'admin'}>\r\n            <AdminPage />\r\n          </PrivateRoute>\r\n\r\n          {/* This is for pages like your.app/books/the-bible, wthere 'the-bible' in an Object ID */}\r\n          {/* <Route exact path=\"/table/:id\" component={Child}/> */}\r\n        </Switch>\r\n      </Router>\r\n    </ProvideAuth>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}