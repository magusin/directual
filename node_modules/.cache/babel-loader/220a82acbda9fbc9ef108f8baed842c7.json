{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\Hugo\\\\code\\\\akatek\\\\directual\\\\directual-react-boilerplate\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\Hugo\\\\code\\\\akatek\\\\directual\\\\directual-react-boilerplate\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Directual from'directual-api';import{useAuth}from'../auth';import{Loader}from'../components/loader/loader';// Example of posting data to Directual\n// Connect to Directual api\nvar api=new Directual({apiHost:'/'});export default function Page2(){// API-endpoint details\nvar dataStructure='';// todo: write here sysname of your data structure\nvar endpoint='';// todo: write here Method name of your API-endpoint\n// Connect authentication context\nvar auth=useAuth();// Hooks for handling state\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),response=_useState2[0],setResponse=_useState2[1];// API response\nvar _useState3=useState(),_useState4=_slicedToArray(_useState3,2),status=_useState4[0],setStatus=_useState4[1];// Request status\nvar _useState5=useState(),_useState6=_slicedToArray(_useState5,2),badRequest=_useState6[0],setBadRequest=_useState6[1];// API error message\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];// Loader\nvar _useState9=useState(true),_useState10=_slicedToArray(_useState9,2),showForm=_useState10[0],setShowForm=_useState10[1];// Show/hide the form\nvar _useState11=useState({}),_useState12=_slicedToArray(_useState11,2),formPayload=_useState12[0],setFormPayload=_useState12[1];// Data to send. Here we can add userID: auth.user by default\n// Reset the form\nvar resetForm=function resetForm(){setResponse();setStatus();setBadRequest();setShowForm(true);setFormPayload({});// Don't forget to include userID: auth.user, if needed\n};// POST-request\nfunction postData(){setLoading(true);setShowForm(false);api// Data structure\n.structure(dataStructure)// POST request + payload + query params:\n.setData(endpoint,formPayload,{sessionID:auth.sessionID}).then(function(response){setResponse(response.result);setStatus(response.status);setLoading(false);}).catch(function(e){// handling errors\nsetLoading(false);console.log(e.response);setBadRequest({httpCode:e.response.status,msg:e.response.data.msg});});}return/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Example of posting data\"),loading&&/*#__PURE__*/React.createElement(Loader,null),showForm&&/*#__PURE__*/React.createElement(\"form\",{onSubmit:postData},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",onChange:function onChange(e){// insert here your FIELD_SYSNAME\nsetFormPayload(_objectSpread(_objectSpread({},formPayload),{},{'FIELD_SYSNAME':e.target.value}));}}),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\"},\"Submit\")),response&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"b\",null,\"Submitted successfully\"),/*#__PURE__*/React.createElement(\"p\",null,\"Response: \",/*#__PURE__*/React.createElement(\"code\",null,JSON.stringify(response))),status&&/*#__PURE__*/React.createElement(\"p\",null,\"Status: \",/*#__PURE__*/React.createElement(\"code\",null,JSON.stringify(status)))),badRequest&&/*#__PURE__*/React.createElement(\"div\",{class:\"error\"},/*#__PURE__*/React.createElement(\"b\",null,badRequest.httpCode,\" error\"),badRequest.httpCode=='400'&&/*#__PURE__*/React.createElement(\"p\",null,\"API-endpoint is not configured properly.\"),badRequest.httpCode=='403'&&/*#__PURE__*/React.createElement(\"p\",null,\"You have to be logged in to submit this form.\"),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"code\",null,badRequest.msg))),!showForm&&!loading&&/*#__PURE__*/React.createElement(\"button\",{onClick:resetForm},\"Submit again\"));}","map":{"version":3,"sources":["C:/Users/Hugo/code/akatek/directual/directual-react-boilerplate/src/pages/Page2.js"],"names":["React","useEffect","useState","Directual","useAuth","Loader","api","apiHost","Page2","dataStructure","endpoint","auth","response","setResponse","status","setStatus","badRequest","setBadRequest","loading","setLoading","showForm","setShowForm","formPayload","setFormPayload","resetForm","postData","structure","setData","sessionID","then","result","catch","e","console","log","httpCode","msg","data","target","value","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Directual from 'directual-api';\r\nimport { useAuth } from '../auth'\r\nimport { Loader } from '../components/loader/loader';\r\n\r\n// Example of posting data to Directual\r\n\r\n// Connect to Directual api\r\nconst api = new Directual({ apiHost: '/' })\r\n\r\nexport default function Page2() {\r\n\r\n  // API-endpoint details\r\n  const dataStructure = '' // todo: write here sysname of your data structure\r\n  const endpoint = '' // todo: write here Method name of your API-endpoint\r\n\r\n  // Connect authentication context\r\n  const auth = useAuth();\r\n\r\n  // Hooks for handling state\r\n  const [response, setResponse] = useState(); // API response\r\n  const [status, setStatus] = useState(); // Request status\r\n  const [badRequest, setBadRequest] = useState(); // API error message\r\n  const [loading, setLoading] = useState(false); // Loader\r\n  const [showForm, setShowForm] = useState(true); // Show/hide the form\r\n  const [formPayload, setFormPayload] = useState({}); // Data to send. Here we can add userID: auth.user by default\r\n\r\n  // Reset the form\r\n  const resetForm = () => {\r\n    setResponse()\r\n    setStatus()\r\n    setBadRequest()\r\n    setShowForm(true)\r\n    setFormPayload({}) // Don't forget to include userID: auth.user, if needed\r\n  }\r\n\r\n  // POST-request\r\n  function postData() {\r\n    setLoading(true)\r\n    setShowForm(false)\r\n    api\r\n      // Data structure\r\n      .structure(dataStructure)\r\n      // POST request + payload + query params:\r\n      .setData(endpoint, formPayload,\r\n        { sessionID: auth.sessionID })\r\n      .then((response) => {\r\n        setResponse(response.result)\r\n        setStatus(response.status)\r\n        setLoading(false)\r\n      })\r\n      .catch((e) => {\r\n        // handling errors\r\n        setLoading(false)\r\n        console.log(e.response)\r\n        setBadRequest({\r\n          httpCode: e.response.status,\r\n          msg: e.response.data.msg\r\n        })\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h1>Example of posting data</h1>\r\n      {loading && <Loader />}\r\n      {showForm &&\r\n        <form onSubmit={postData}>\r\n          <input type=\"text\" onChange={(e) => {\r\n            // insert here your FIELD_SYSNAME\r\n            setFormPayload({ ...formPayload, 'FIELD_SYSNAME': e.target.value })\r\n          }} />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      }\r\n\r\n      {/* Everything is OK */}\r\n      {response && <div>\r\n        <b>Submitted successfully</b>\r\n        <p>Response: <code>{JSON.stringify(response)}</code></p>\r\n        {status && <p>Status: <code>{JSON.stringify(status)}</code></p>}\r\n      </div>}\r\n\r\n      {/* Something went wrong */}\r\n      {badRequest && <div class=\"error\">\r\n        <b>{badRequest.httpCode} error</b>\r\n        {(badRequest.httpCode == '400') &&\r\n          <p>API-endpoint is not configured properly.</p>}\r\n        {(badRequest.httpCode == '403') &&\r\n          <p>You have to be logged in to submit this form.</p>}\r\n        <p><code>{badRequest.msg}</code></p>\r\n      </div>}\r\n\r\n      {/* Reset the form */}\r\n      {!showForm && !loading &&\r\n        <button onClick={resetForm}>\r\n          Submit again\r\n        </button>}\r\n\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}