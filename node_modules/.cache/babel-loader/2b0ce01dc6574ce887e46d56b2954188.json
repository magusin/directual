{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Hugo\\\\code\\\\akatek\\\\directual\\\\directual-react-boilerplate\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Directual from'directual-api';import{useAuth}from'../auth';import{Loader}from'../components/loader/loader';import{Card,CardBody,CardHeader,CardText,CardTitle,Container}from'reactstrap';// Example of getting data from Directual\n// Connect to Directual api\nvar api=new Directual({apiHost:'/'});export default function Page1(){// API-endpoint details\nvar dataStructure='article';// todo: write here sysname of your data structure\nvar endpoint='getArticles';// todo: write here Method name of your API-endpoint\n// connect authentication context\nvar auth=useAuth();// Hooks for handling state\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),payload=_useState2[0],setPayload=_useState2[1];// API response\nvar _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),pageInfo=_useState4[0],setPageInfo=_useState4[1];// API response metadata, e.g. number of objects\nvar _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];// initial loader\nvar _useState7=useState(),_useState8=_slicedToArray(_useState7,2),badRequest=_useState8[0],setBadRequest=_useState8[1];// API error message\nvar _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),pageLoading=_useState10[0],setPageLoading=_useState10[1];// paging loader\nvar _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),pageNum=_useState12[0],setPageNum=_useState12[1];// Page number, by default = 0\nvar _useState13=useState(2),_useState14=_slicedToArray(_useState13,2),pageSize=_useState14[0],setPageSize=_useState14[1];// Page size, bu default = 10\n// Paging\nuseEffect(function(){setPageLoading(true);getData();},[pageNum]);var nextPage=function nextPage(){setPageLoading(true);setPageNum(pageNum+1);};var prevPage=function prevPage(){setPageLoading(true);setPageNum(pageNum-1);};// GET-request\nfunction getData(){api// Data structure\n.structure(dataStructure)// GET request + query params (sessionID, page, pageSize by default)\n.getData(endpoint,{sessionID:auth.sessionID,page:pageNum,pageSize:pageSize})// other possible query params:\n// {{HttpRequest}} — any param for Filtering\n// sort=FIELD_SYSNAME_1,desc,FIELD_SYSNAME_2,asc — sorting with multiple params\n.then(function(response){setPayload(response.payload);setPageInfo(response.pageInfo);setLoading(false);setPageLoading(false);}).catch(function(e){// handling errors\nsetLoading(false);setPageLoading(false);console.log(e.response);setBadRequest(e.response.status+', '+e.response.data.msg);});}return/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Annonces\"),loading&&/*#__PURE__*/React.createElement(Loader,null),payload&&!loading&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Container,null,payload.map(function(data){return/*#__PURE__*/React.createElement(Card,{className:\"border-1 border-primary text-center mb-2 \",key:data.id},/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(CardTitle,null,/*#__PURE__*/React.createElement(\"h3\",null,data.title))),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"img\",{src:data.file,className:\"image\"}),/*#__PURE__*/React.createElement(CardText,null,/*#__PURE__*/React.createElement(\"p\",null,data.description))));})),pageLoading&&/*#__PURE__*/React.createElement(Loader,null),!pageLoading&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"button\",{disabled:pageNum<=0&&\"disabled\",onClick:prevPage},\"prev\"),/*#__PURE__*/React.createElement(\"button\",{disabled:(badRequest||pageNum>=pageInfo.totalPage-1)&&\"disabled\",onClick:nextPage},\"next\"))));}","map":{"version":3,"sources":["C:/Users/Hugo/code/akatek/directual/directual-react-boilerplate/src/pages/Page1.js"],"names":["React","useEffect","useState","Directual","useAuth","Loader","Card","CardBody","CardHeader","CardText","CardTitle","Container","api","apiHost","Page1","dataStructure","endpoint","auth","payload","setPayload","pageInfo","setPageInfo","loading","setLoading","badRequest","setBadRequest","pageLoading","setPageLoading","pageNum","setPageNum","pageSize","setPageSize","getData","nextPage","prevPage","structure","sessionID","page","then","response","catch","e","console","log","status","data","msg","map","id","title","file","description","totalPage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Directual from 'directual-api';\r\nimport { useAuth } from '../auth'\r\nimport { Loader } from '../components/loader/loader';\r\nimport {Card, CardBody, CardHeader, CardText, CardTitle, Container} from 'reactstrap'\r\n\r\n// Example of getting data from Directual\r\n\r\n// Connect to Directual api\r\nconst api = new Directual({ apiHost: '/' })\r\n\r\nexport default function Page1() {\r\n\r\n  // API-endpoint details\r\n  const dataStructure = 'article' // todo: write here sysname of your data structure\r\n  const endpoint = 'getArticles' // todo: write here Method name of your API-endpoint\r\n\r\n  // connect authentication context\r\n  const auth = useAuth();\r\n\r\n  // Hooks for handling state\r\n  const [payload, setPayload] = useState([]); // API response\r\n  const [pageInfo, setPageInfo] = useState({}); // API response metadata, e.g. number of objects\r\n  const [loading, setLoading] = useState(true); // initial loader\r\n  const [badRequest, setBadRequest] = useState(); // API error message\r\n  const [pageLoading, setPageLoading] = useState(false); // paging loader\r\n  const [pageNum, setPageNum] = useState(0); // Page number, by default = 0\r\n  const [pageSize, setPageSize] = useState(2); // Page size, bu default = 10\r\n\r\n  // Paging\r\n  useEffect(() => {\r\n    setPageLoading(true)\r\n    getData()\r\n  }, [pageNum])\r\n\r\n  const nextPage = () => {\r\n    setPageLoading(true)\r\n    setPageNum(pageNum + 1)\r\n  }\r\n  const prevPage = () => {\r\n    setPageLoading(true)\r\n    setPageNum(pageNum - 1)\r\n  }\r\n\r\n  // GET-request\r\n  function getData() {\r\n    api\r\n      // Data structure\r\n      .structure(dataStructure)\r\n      // GET request + query params (sessionID, page, pageSize by default)\r\n      .getData(endpoint, { sessionID: auth.sessionID, page: pageNum, pageSize: pageSize })\r\n      // other possible query params:\r\n      // {{HttpRequest}} — any param for Filtering\r\n      // sort=FIELD_SYSNAME_1,desc,FIELD_SYSNAME_2,asc — sorting with multiple params\r\n      .then((response) => {\r\n        setPayload(response.payload)\r\n        setPageInfo(response.pageInfo)\r\n        setLoading(false)\r\n        setPageLoading(false)\r\n      })\r\n      .catch((e) => {\r\n        // handling errors\r\n        setLoading(false)\r\n        setPageLoading(false)\r\n        console.log(e.response)\r\n        setBadRequest(e.response.status + ', ' + e.response.data.msg)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h1>Annonces</h1>\r\n\r\n      {loading && <Loader />}\r\n      {payload && !loading &&\r\n        <div>\r\n\r\n          {/* API response */}\r\n          {/* <div className=\"request-info\">\r\n            <span>Data structure: <b>{dataStructure ? dataStructure : <span className=\"error\">not provided</span>}</b></span>\r\n            <span>API-endpoint: <b>{endpoint ? endpoint : <span className=\"error\">not provided</span>}</b></span>\r\n            <span>Payload: <code>{JSON.stringify(payload)}</code></span>\r\n            <span>Payload info: <code>{JSON.stringify(pageInfo)}</code></span>\r\n            {badRequest && <code className=\"error\">Error: <b>{badRequest}</b></code>}\r\n          </div> */}\r\n          <Container>\r\n          {payload.map(data =>\r\n           <Card className='border-1 border-primary text-center mb-2 ' key={data.id}>\r\n             <CardHeader>\r\n               <CardTitle>\r\n               <h3 >{data.title}</h3>\r\n               </CardTitle>\r\n             </CardHeader>\r\n           <CardBody>\r\n           <img src={data.file} className='image'></img>\r\n           <CardText>\r\n             <p>{data.description}</p>\r\n           </CardText>\r\n           </CardBody>\r\n         </Card>\r\n            )}\r\n           </Container>\r\n          {/* Paging */}\r\n          {pageLoading && <Loader />}\r\n          {!pageLoading &&\r\n            <div>\r\n              <button disabled={(pageNum <= 0) && \"disabled\"} onClick={prevPage}>prev</button>\r\n              <button disabled={(badRequest || (pageNum >= pageInfo.totalPage - 1)) && \"disabled\"} onClick={nextPage}>next</button>\r\n            </div>\r\n          }\r\n\r\n        </div>}\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}