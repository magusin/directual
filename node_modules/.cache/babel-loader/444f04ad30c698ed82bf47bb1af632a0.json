{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hugo\\\\code\\\\akatek\\\\directual\\\\directual-react-boilerplate\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { MainMenu } from './components/menu/menu';\nimport { ProvideAuth, useAuth } from './auth';\nimport Page1 from './pages/Page1';\nimport PrivatePage from './pages/PrivatePage';\nimport AdminPage from './pages/AdminPage';\nimport LoginPage from './pages/login';\n\nfunction PrivateRoute(_ref) {\n  let {\n    children,\n    hasRole,\n    ...rest\n  } = _ref;\n  const auth = useAuth();\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: _ref2 => {\n      let {\n        location\n      } = _ref2;\n      return auth.isAutorised() && auth.hasRole(hasRole) ? children : auth.isAutorised() && !auth.hasRole(hasRole) ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 66\n        }\n      }, \"Access denied\") : /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: '/login',\n          state: {\n            from: location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 19\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }));\n} // This is for pages like your.app/books/the-bible, wthere 'the-bible' in nan Object ID\n// \n// const Child = ({ match }) => {\n//   return (\n//   <div>Object ID: {match.params.id}</div>\n//   )\n// } \n\n\nexport default function App() {\n  return /*#__PURE__*/React.createElement(ProvideAuth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MainMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LoginPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Page1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/private\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PrivatePage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/admin\",\n    hasRole: 'admin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AdminPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/Hugo/code/akatek/directual/directual-react-boilerplate/src/App.js"],"names":["React","BrowserRouter","Router","Switch","Route","Redirect","MainMenu","ProvideAuth","useAuth","Page1","PrivatePage","AdminPage","LoginPage","PrivateRoute","children","hasRole","rest","auth","location","isAutorised","pathname","state","from","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,QAJF,QAKO,kBALP;AAOA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,QAArC;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,SAAP,MAAsB,eAAtB;;AAEA,SAASC,YAAT,OAAsD;AAAA,MAAhC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqB,OAAGC;AAAxB,GAAgC;AACpD,QAAMC,IAAI,GAAGT,OAAO,EAApB;AACA,sBACI,oBAAC,KAAD,oBACQQ,IADR;AAEI,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEE,QAAAA;AAAF,OAAD;AAAA,aACJD,IAAI,CAACE,WAAL,MAAsBF,IAAI,CAACF,OAAL,CAAaA,OAAb,CAAtB,GACID,QADJ,GAEIG,IAAI,CAACE,WAAL,MAAsB,CAACF,IAAI,CAACF,OAAL,CAAaA,OAAb,CAAvB,gBAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAA/C,gBACA,oBAAC,QAAD;AACI,QAAA,EAAE,EAAE;AACAK,UAAAA,QAAQ,EAAE,QADV;AAEAC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ;AAAR;AAFP,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJA;AAAA,KAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAiBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,SAASK,GAAT,GAAe;AAC5B,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAHF,eAME,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,eAWE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,eAgBE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAE,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,CAFF,CADF,CADF;AA8BD","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom'\r\n\r\nimport { MainMenu } from './components/menu/menu'\r\nimport { ProvideAuth, useAuth } from './auth'\r\n\r\nimport Page1 from './pages/Page1'\r\nimport PrivatePage from './pages/PrivatePage'\r\nimport AdminPage from './pages/AdminPage'\r\nimport LoginPage from './pages/login'\r\n\r\nfunction PrivateRoute({ children, hasRole, ...rest }) {\r\n  const auth = useAuth();\r\n  return (\r\n      <Route\r\n          {...rest}\r\n          render={({ location }) =>\r\n              auth.isAutorised() && auth.hasRole(hasRole) ? (\r\n                  children\r\n              ) : auth.isAutorised() && !auth.hasRole(hasRole) ? <div>Access denied</div> : (\r\n                  <Redirect\r\n                      to={{\r\n                          pathname: '/login',\r\n                          state: { from: location }\r\n                      }}\r\n                  />\r\n              )\r\n          }\r\n      />\r\n  )\r\n}\r\n\r\n// This is for pages like your.app/books/the-bible, wthere 'the-bible' in nan Object ID\r\n// \r\n// const Child = ({ match }) => {\r\n//   return (\r\n//   <div>Object ID: {match.params.id}</div>\r\n//   )\r\n// } \r\n\r\nexport default function App() {\r\n  return (\r\n    <ProvideAuth>\r\n      <Router>\r\n        <MainMenu />\r\n        <Switch>\r\n\r\n         {/* Public pages */}\r\n          <Route path=\"/login\">\r\n            <LoginPage />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Page1 />\r\n          </Route>\r\n          \r\n          {/* Pages for any authorised user */}\r\n          <PrivateRoute path=\"/private\">\r\n            <PrivatePage />\r\n          </PrivateRoute>\r\n          \r\n          {/* Pages for users, who have role == 'admin'. You can apply any other value here */}\r\n          <PrivateRoute path=\"/admin\" hasRole={'admin'}>\r\n            <AdminPage />\r\n          </PrivateRoute>\r\n\r\n          {/* This is for pages like your.app/books/the-bible, wthere 'the-bible' in an Object ID */}\r\n          {/* <Route exact path=\"/table/:id\" component={Child}/> */}\r\n        </Switch>\r\n      </Router>\r\n    </ProvideAuth>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}