{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hugo\\\\code\\\\akatek\\\\directual\\\\src\\\\pages\\\\Page2.js\";\nimport React, { useEffect, useState } from 'react';\nimport Directual from 'directual-api';\nimport { useAuth } from '../auth';\nimport { Loader } from '../components/loader/loader';\nimport { Card, CardBody, CardHeader, CardText, CardTitle, Container } from 'reactstrap';\nimport { useParams } from 'react-router-dom'; // Example of getting data from Directual\n// Connect to Directual api\n\nconst api = new Directual({\n  apiHost: '/'\n});\nexport default function Page1() {\n  // API-endpoint details\n  const dataStructure = 'product'; // todo: write here sysname of your data structure\n\n  const endpoint = 'getProduct'; // todo: write here Method name of your API-endpoint\n\n  const {\n    id\n  } = useParams();\n  console.log(useP); // connect authentication context\n\n  const auth = useAuth(); // Hooks for handling state\n\n  const [payload, setPayload] = useState([]); // API response\n\n  const [pageInfo, setPageInfo] = useState({}); // API response metadata, e.g. number of objects\n\n  const [loading, setLoading] = useState(true); // initial loader\n\n  const [badRequest, setBadRequest] = useState(); // API error message\n\n  const [pageLoading, setPageLoading] = useState(false); // paging loader\n\n  const [pageNum, setPageNum] = useState(0); // Page number, by default = 0\n\n  const [pageSize] = useState(2); // Page size, bu default = 10\n  // Paging\n\n  useEffect(() => {\n    setPageLoading(true);\n    getData(); // eslint-disable-next-line\n  }, [pageNum]);\n\n  const nextPage = () => {\n    setPageLoading(true);\n    setPageNum(pageNum + 1);\n  };\n\n  const prevPage = () => {\n    setPageLoading(true);\n    setPageNum(pageNum - 1);\n  };\n\n  const actualPage = () => {\n    setPageLoading(true);\n    setPageNum(pageNum === i);\n  };\n\n  console.log(pageInfo); // GET-request\n\n  function getData() {\n    api // Data structure\n    .structure(dataStructure) // GET request + query params (sessionID, page, pageSize by default)\n    .getData(endpoint, {\n      sessionID: auth.sessionID,\n      page: pageNum,\n      pageSize: pageSize\n    }) // other possible query params:\n    // {{HttpRequest}} — any param for Filtering\n    // sort=FIELD_SYSNAME_1,desc,FIELD_SYSNAME_2,asc — sorting with multiple params\n    .then(response => {\n      setPayload(response.payload);\n      setPageInfo(response.pageInfo);\n      setLoading(false);\n      setPageLoading(false);\n    }).catch(e => {\n      // handling errors\n      setLoading(false);\n      setPageLoading(false);\n      console.log(e.response);\n      setBadRequest(e.response.status + ', ' + e.response.data.msg);\n    });\n  }\n\n  let items = [];\n\n  for (var i = 1; i <= pageInfo.totalPage; i++) {\n    items.push( /*#__PURE__*/React.createElement(\"button\", {\n      onClick: actualPage,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }\n    }, i));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"Produits et services\"), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }), payload && !loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"request-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Data structure: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 35\n    }\n  }, dataStructure ? dataStructure : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 71\n    }\n  }, \"not provided\"))), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"API-endpoint: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, endpoint ? endpoint : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 59\n    }\n  }, \"not provided\"))), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Payload: \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 28\n    }\n  }, JSON.stringify(payload))), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Payload info: \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, JSON.stringify(pageInfo))), badRequest && /*#__PURE__*/React.createElement(\"code\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 28\n    }\n  }, \"Error: \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 59\n    }\n  }, badRequest))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, payload.map(data => /*#__PURE__*/React.createElement(Card, {\n    className: \"border-1 border-primary text-center mb-2 \",\n    key: data.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, data.title))), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, data.description)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, data.company))))), pageLoading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 27\n    }\n  }), !pageLoading &&\n  /*#__PURE__*/\n  // <div>\n  //   <button disabled={(pageNum <= 0) && \"disabled\"} onClick={prevPage}>prev</button>\n  //   <button disabled={(badRequest || (pageNum >= pageInfo.totalPage - 1)) && \"disabled\"} onClick={nextPage}>next</button>\n  // </div>\n  React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"pagination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    class: pageNum <= 0 ? \"disabled\" : \"\",\n    onClick: prevPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }, \"Pr\\xE9c\\xE9dent\"), items, /*#__PURE__*/React.createElement(\"button\", {\n    class: pageNum >= pageInfo.totalPage - 1 ? \"disabled\" : \"\",\n    onClick: nextPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, \"Suivant\"))))));\n}","map":{"version":3,"sources":["C:/Users/Hugo/code/akatek/directual/src/pages/Page2.js"],"names":["React","useEffect","useState","Directual","useAuth","Loader","Card","CardBody","CardHeader","CardText","CardTitle","Container","useParams","api","apiHost","Page1","dataStructure","endpoint","id","console","log","useP","auth","payload","setPayload","pageInfo","setPageInfo","loading","setLoading","badRequest","setBadRequest","pageLoading","setPageLoading","pageNum","setPageNum","pageSize","getData","nextPage","prevPage","actualPage","i","structure","sessionID","page","then","response","catch","e","status","data","msg","items","totalPage","push","JSON","stringify","map","title","description","company"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Directual from 'directual-api'\r\nimport { useAuth } from '../auth'\r\nimport { Loader } from '../components/loader/loader'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardText,\r\n  CardTitle,\r\n  Container\r\n} from 'reactstrap'\r\nimport {useParams} from 'react-router-dom'\r\n\r\n// Example of getting data from Directual\r\n\r\n// Connect to Directual api\r\nconst api = new Directual({ apiHost: '/' })\r\n\r\nexport default function Page1() {\r\n  // API-endpoint details\r\n  const dataStructure = 'product' // todo: write here sysname of your data structure\r\n  const endpoint = 'getProduct' // todo: write here Method name of your API-endpoint\r\n  const {id} = useParams()\r\n  console.log(useP)\r\n  // connect authentication context\r\n  const auth = useAuth()\r\n\r\n  // Hooks for handling state\r\n  const [payload, setPayload] = useState([]) // API response\r\n  const [pageInfo, setPageInfo] = useState({}) // API response metadata, e.g. number of objects\r\n  const [loading, setLoading] = useState(true) // initial loader\r\n  const [badRequest, setBadRequest] = useState() // API error message\r\n  const [pageLoading, setPageLoading] = useState(false) // paging loader\r\n  const [pageNum, setPageNum] = useState(0) // Page number, by default = 0\r\n  const [pageSize] = useState(2) // Page size, bu default = 10\r\n\r\n  // Paging\r\n  useEffect(() => {\r\n    setPageLoading(true)\r\n    getData()\r\n    // eslint-disable-next-line\r\n  }, [pageNum])\r\n\r\n  const nextPage = () => {\r\n    setPageLoading(true)\r\n    setPageNum(pageNum + 1)\r\n  }\r\n  const prevPage = () => {\r\n    setPageLoading(true)\r\n    setPageNum(pageNum - 1)\r\n  }\r\n  const actualPage = () => {\r\n     setPageLoading(true)\r\n     setPageNum(pageNum === i)\r\n   }\r\n  console.log(pageInfo)\r\n  // GET-request\r\n  function getData() {\r\n    api\r\n      // Data structure\r\n      .structure(dataStructure)\r\n      // GET request + query params (sessionID, page, pageSize by default)\r\n      .getData(endpoint, {\r\n        sessionID: auth.sessionID,\r\n        page: pageNum,\r\n        pageSize: pageSize\r\n      })\r\n      // other possible query params:\r\n      // {{HttpRequest}} — any param for Filtering\r\n      // sort=FIELD_SYSNAME_1,desc,FIELD_SYSNAME_2,asc — sorting with multiple params\r\n      .then((response) => {\r\n        setPayload(response.payload)\r\n        setPageInfo(response.pageInfo)\r\n        setLoading(false)\r\n        setPageLoading(false)\r\n      })\r\n      .catch((e) => {\r\n        // handling errors\r\n        setLoading(false)\r\n        setPageLoading(false)\r\n        console.log(e.response)\r\n        setBadRequest(e.response.status + ', ' + e.response.data.msg)\r\n      })\r\n  }\r\n\r\n  let items = []\r\n\r\n  for ( var i = 1; i <= pageInfo.totalPage; i ++) {\r\n    items.push(<button onClick={actualPage} key={i}>{i}</button>)\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h1>Produits et services</h1>\r\n\r\n      {loading && <Loader />}\r\n      {payload && !loading && (\r\n        <div>\r\n          {/* API response */}\r\n          <div className=\"request-info\">\r\n            <span>Data structure: <b>{dataStructure ? dataStructure : <span className=\"error\">not provided</span>}</b></span>\r\n            <span>API-endpoint: <b>{endpoint ? endpoint : <span className=\"error\">not provided</span>}</b></span>\r\n            <span>Payload: <code>{JSON.stringify(payload)}</code></span>\r\n            <span>Payload info: <code>{JSON.stringify(pageInfo)}</code></span>\r\n            {badRequest && <code className=\"error\">Error: <b>{badRequest}</b></code>}\r\n          </div>\r\n          <Container>\r\n            {payload.map((data) => (\r\n              <Card\r\n                className=\"border-1 border-primary text-center mb-2 \"\r\n                key={data.id}\r\n              >\r\n                <CardHeader>\r\n                  <CardTitle>\r\n                    <h3>{data.title}</h3>\r\n                  </CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  {/* <img alt='none' src={data.file} className='image'></img> */}\r\n                  <CardText>\r\n                    <p>{data.description}</p>\r\n                  </CardText>\r\n                  <p>{data.company}</p>\r\n                </CardBody>\r\n              </Card>\r\n            ))}\r\n          </Container>\r\n          {/* Paging */}\r\n          {pageLoading && <Loader />}\r\n          {!pageLoading && (\r\n            // <div>\r\n            //   <button disabled={(pageNum <= 0) && \"disabled\"} onClick={prevPage}>prev</button>\r\n            //   <button disabled={(badRequest || (pageNum >= pageInfo.totalPage - 1)) && \"disabled\"} onClick={nextPage}>next</button>\r\n            // </div>\r\n            <div>\r\n              <nav>\r\n                <ul id=\"pagination\">\r\n                  <button class={(pageNum <= 0) ? \"disabled\" : \"\"} onClick={prevPage}>Précédent</button>\r\n                  {items}\r\n                  <button class={(pageNum >= pageInfo.totalPage - 1) ? \"disabled\" : \"\"} onClick={nextPage}>Suivant</button>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}