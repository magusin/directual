{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar axios_1 = require(\"axios\");\n\nvar axiosInstance = axios_1.default.create({\n  headers: {\n    post: {\n      'Content-Type': 'application/json'\n    }\n  }\n});\n\nvar Token =\n/** @class */\nfunction () {\n  function Token(token, username, role) {\n    this.sessionID = token;\n    this.username = username;\n    this.role = role;\n  }\n\n  return Token;\n}();\n\nexports.Token = Token;\n\nvar Auth =\n/** @class */\nfunction () {\n  function Auth(config) {\n    this.config = config;\n  }\n\n  Auth.prototype.isAuthenticated = function () {\n    return Promise.resolve(false);\n  };\n\n  Auth.prototype.isAuthorize = function (sid, cb) {\n    this.check(sid).then(function (res) {\n      cb(res.result, res.token);\n    });\n  };\n\n  Auth.prototype.login = function (login, pass) {\n    return axiosInstance.request({\n      method: 'POST',\n      url: \"/good/api/v5/auth\",\n      baseURL: \"\" + this.config.apiHost,\n      params: __assign({}, this.config),\n      data: {\n        appID: this.config.appID,\n        provider: 'rest',\n        username: login,\n        password: pass\n      }\n    }).then(function (result) {\n      if (result.status === 200 && result.data) {\n        var token = new Token(result.data.result.token, result.data.result.username, result.data.result.role);\n        return Promise.resolve(token);\n      }\n\n      return Promise.reject(new Error('No reason but to reject'));\n    });\n  };\n\n  Auth.prototype.logout = function (sessionID) {\n    return axiosInstance.request({\n      method: 'GET',\n      url: \"/good/api/v4/auth/logout\",\n      baseURL: \"\" + this.config.apiHost,\n      params: __assign({}, this.config, {\n        sessionID: sessionID\n      }),\n      data: {\n        appID: this.config.appID\n      }\n    }).then(function (result) {\n      return Promise.resolve();\n    });\n  };\n\n  Auth.prototype.check = function (sessionID) {\n    return axiosInstance.request({\n      method: 'GET',\n      url: \"/good/api/v4/auth/check\",\n      baseURL: \"\" + this.config.apiHost,\n      params: __assign({}, this.config, {\n        sessionID: sessionID\n      })\n    }).then(function (result) {\n      return Promise.resolve(result.data.result);\n    });\n  };\n\n  return Auth;\n}();\n\nexports.Auth = Auth;","map":{"version":3,"sources":["../src/auth.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAM,aAAa,GAAG,OAAA,CAAA,OAAA,CAAM,MAAN,CAAa;AACjC,EAAA,OAAO,EAAE;AACP,IAAA,IAAI,EAAE;AACJ,sBAAgB;AADZ;AADC;AADwB,CAAb,CAAtB;;AAQA,IAAA,KAAA;AAAA;AAAA,YAAA;AAKE,WAAA,KAAA,CAAY,KAAZ,EAA2B,QAA3B,EAA6C,IAA7C,EAAyD;AACvD,SAAK,SAAL,GAAiB,KAAjB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACA,SAAK,IAAL,GAAY,IAAZ;AACD;;AACH,SAAA,KAAA;AAAC,CAVD,EAAA;;AAAa,OAAA,CAAA,KAAA,GAAA,KAAA;;AAYb,IAAA,IAAA;AAAA;AAAA,YAAA;AAGE,WAAA,IAAA,CAAY,MAAZ,EAAuB;AACrB,SAAK,MAAL,GAAc,MAAd;AACD;;AAED,EAAA,IAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACE,WAAO,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAP;AACD,GAFD;;AAIA,EAAA,IAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,GAAZ,EAAyB,EAAzB,EAAwE;AACtE,SAAK,KAAL,CAAW,GAAX,EAAgB,IAAhB,CAAqB,UAAA,GAAA,EAAG;AACtB,MAAA,EAAE,CAAC,GAAG,CAAC,MAAL,EAAa,GAAG,CAAC,KAAjB,CAAF;AACD,KAFD;AAGD,GAJD;;AAMA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,KAAN,EAAqB,IAArB,EAAiC;AAC/B,WAAO,aAAa,CACjB,OADI,CACI;AACP,MAAA,MAAM,EAAE,MADD;AAEP,MAAA,GAAG,EAAE,mBAFE;AAGP,MAAA,OAAO,EAAE,KAAG,KAAK,MAAL,CAAY,OAHjB;AAIP,MAAA,MAAM,EAAA,QAAA,CAAA,EAAA,EAAO,KAAK,MAAZ,CAJC;AAKP,MAAA,IAAI,EAAE;AACJ,QAAA,KAAK,EAAE,KAAK,MAAL,CAAY,KADf;AAEJ,QAAA,QAAQ,EAAE,MAFN;AAGJ,QAAA,QAAQ,EAAE,KAHN;AAIJ,QAAA,QAAQ,EAAE;AAJN;AALC,KADJ,EAaJ,IAbI,CAaC,UAAA,MAAA,EAAM;AACV,UAAI,MAAM,CAAC,MAAP,KAAkB,GAAlB,IAAyB,MAAM,CAAC,IAApC,EAA0C;AACxC,YAAI,KAAK,GAAG,IAAI,KAAJ,CACV,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,KADT,EAEV,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,QAFT,EAGV,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAmB,IAHT,CAAZ;AAKA,eAAO,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAP;AACD;;AACD,aAAO,OAAO,CAAC,MAAR,CAAe,IAAI,KAAJ,CAAU,yBAAV,CAAf,CAAP;AACD,KAvBI,CAAP;AAwBD,GAzBD;;AA2BA,EAAA,IAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,SAAP,EAAwB;AACtB,WAAO,aAAa,CACjB,OADI,CACI;AACP,MAAA,MAAM,EAAE,KADD;AAEP,MAAA,GAAG,EAAE,0BAFE;AAGP,MAAA,OAAO,EAAE,KAAG,KAAK,MAAL,CAAY,OAHjB;AAIP,MAAA,MAAM,EAAA,QAAA,CAAA,EAAA,EAAO,KAAK,MAAZ,EAAkB;AAAE,QAAA,SAAS,EAAA;AAAX,OAAlB,CAJC;AAKP,MAAA,IAAI,EAAE;AACJ,QAAA,KAAK,EAAE,KAAK,MAAL,CAAY;AADf;AALC,KADJ,EAUJ,IAVI,CAUC,UAAA,MAAA,EAAM;AACV,aAAO,OAAO,CAAC,OAAR,EAAP;AACD,KAZI,CAAP;AAaD,GAdD;;AAgBA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,SAAN,EAAuB;AACrB,WAAO,aAAa,CACjB,OADI,CACI;AACP,MAAA,MAAM,EAAE,KADD;AAEP,MAAA,GAAG,EAAE,yBAFE;AAGP,MAAA,OAAO,EAAE,KAAG,KAAK,MAAL,CAAY,OAHjB;AAIP,MAAA,MAAM,EAAA,QAAA,CAAA,EAAA,EAAO,KAAK,MAAZ,EAAkB;AAAE,QAAA,SAAS,EAAA;AAAX,OAAlB;AAJC,KADJ,EAOJ,IAPI,CAOC,UAAA,MAAA,EAAM;AACV,aAAO,OAAO,CAAC,OAAR,CAAgB,MAAM,CAAC,IAAP,CAAY,MAA5B,CAAP;AACD,KATI,CAAP;AAUD,GAXD;;AAYF,SAAA,IAAA;AAAC,CAxED,EAAA;;AAAa,OAAA,CAAA,IAAA,GAAA,IAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar axios_1 = require(\"axios\");\r\nvar axiosInstance = axios_1.default.create({\r\n    headers: {\r\n        post: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n    },\r\n});\r\nvar Token = /** @class */ (function () {\r\n    function Token(token, username, role) {\r\n        this.sessionID = token;\r\n        this.username = username;\r\n        this.role = role;\r\n    }\r\n    return Token;\r\n}());\r\nexports.Token = Token;\r\nvar Auth = /** @class */ (function () {\r\n    function Auth(config) {\r\n        this.config = config;\r\n    }\r\n    Auth.prototype.isAuthenticated = function () {\r\n        return Promise.resolve(false);\r\n    };\r\n    Auth.prototype.isAuthorize = function (sid, cb) {\r\n        this.check(sid).then(function (res) {\r\n            cb(res.result, res.token);\r\n        });\r\n    };\r\n    Auth.prototype.login = function (login, pass) {\r\n        return axiosInstance\r\n            .request({\r\n            method: 'POST',\r\n            url: \"/good/api/v5/auth\",\r\n            baseURL: \"\" + this.config.apiHost,\r\n            params: __assign({}, this.config),\r\n            data: {\r\n                appID: this.config.appID,\r\n                provider: 'rest',\r\n                username: login,\r\n                password: pass,\r\n            },\r\n        })\r\n            .then(function (result) {\r\n            if (result.status === 200 && result.data) {\r\n                var token = new Token(result.data.result.token, result.data.result.username, result.data.result.role);\r\n                return Promise.resolve(token);\r\n            }\r\n            return Promise.reject(new Error('No reason but to reject'));\r\n        });\r\n    };\r\n    Auth.prototype.logout = function (sessionID) {\r\n        return axiosInstance\r\n            .request({\r\n            method: 'GET',\r\n            url: \"/good/api/v4/auth/logout\",\r\n            baseURL: \"\" + this.config.apiHost,\r\n            params: __assign({}, this.config, { sessionID: sessionID }),\r\n            data: {\r\n                appID: this.config.appID,\r\n            },\r\n        })\r\n            .then(function (result) {\r\n            return Promise.resolve();\r\n        });\r\n    };\r\n    Auth.prototype.check = function (sessionID) {\r\n        return axiosInstance\r\n            .request({\r\n            method: 'GET',\r\n            url: \"/good/api/v4/auth/check\",\r\n            baseURL: \"\" + this.config.apiHost,\r\n            params: __assign({}, this.config, { sessionID: sessionID }),\r\n        })\r\n            .then(function (result) {\r\n            return Promise.resolve(result.data.result);\r\n        });\r\n    };\r\n    return Auth;\r\n}());\r\nexports.Auth = Auth;\r\n//# sourceMappingURL=auth.js.map"]},"metadata":{},"sourceType":"script"}