{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hugo\\\\code\\\\akatek\\\\directual\\\\src\\\\pages\\\\AdminPage.js\";\nimport React, { useState } from 'react';\nimport Directual from 'directual-api';\nimport { useAuth } from '../auth';\nimport { Loader } from '../components/loader/loader'; // Example of posting data to Directual\n// Connect to Directual api\n\nconst api = new Directual({\n  apiHost: '/'\n});\nexport default function AdminPage() {\n  // API-endpoint details\n  const dataStructure = 'product'; // todo: write here sysname of your data structure\n\n  const endpoint = 'postProduct'; // todo: write here Method name of your API-endpoint\n  // Connect authentication context\n\n  const auth = useAuth(); // Hooks for handling state\n\n  const [response, setResponse] = useState(); // API response\n\n  const [status, setStatus] = useState(); // Request status\n\n  const [badRequest, setBadRequest] = useState(); // API error message\n\n  const [loading, setLoading] = useState(false); // Loader\n\n  const [showForm, setShowForm] = useState(true); // Show/hide the form\n\n  const [formPayload, setFormPayload] = useState(); // Data to send. Here we can add userID: auth.user by default\n  // Reset the form\n\n  const resetForm = () => {\n    setResponse();\n    setStatus();\n    setBadRequest();\n    setShowForm(true);\n    setFormPayload({\n      userID: auth.user\n    }); // Don't forget to include userID: auth.user, if needed\n  }; // POST-request\n\n\n  function postData() {\n    setLoading(true);\n    setShowForm(false);\n    api // Data structure\n    .structure(dataStructure) // POST request + payload + query params:\n    .setData(endpoint, formPayload, {\n      sessionID: auth.sessionID\n    }).then(response => {\n      setResponse(response.result);\n      setStatus(response.status);\n      setLoading(false);\n    }).catch(e => {\n      // handling errors\n      setLoading(false);\n      console.log(e.response);\n      setBadRequest({\n        httpCode: e.response.status,\n        msg: e.response.data.msg\n      });\n    });\n  }\n\n  function postData2() {\n    //    var data = new FormData();\n    //    var imagedata = document.querySelector('input[type=\"file\"]').files[0];\n    //    data.append(\"data\", imagedata);\n    //    fetch(`https://api.directual.com/good/api/v5/data/product/postProduct?appID=445e7531-8fc5-44ad-9402-2668a9bf7365&sessionID=${auth.sessionID}`, {\n    //      mode: 'no-cors',\n    //      method: \"POST\",\n    //      headers: {\n    //       'Content-Type': 'multipart/form-data; charset=utf-8; boundary=__X_PAW_BOUNDARY__'\n    //   }\n    //    }).then(function (res) {\n    //      if (res.ok) {\n    //        alert(\"Perfect! \");\n    //      } else if (res.status === 401) {\n    //        alert(\"Oops! \");\n    //      }\n    //    }, function (e) {\n    //      alert(\"Error submitting form!\");\n    //    });\n    //  }\n    setLoading(true);\n    setShowForm(false);\n    fetch(`http://localhost:3000/good/api/v5/data/product/postProduct?apiHost=%2F&sessionID=${auth.sessionID}`, {\n      method: 'POST',\n      body: JSON.stringify({\n        id: formPayload.id,\n        title: formPayload.title\n      }),\n      headers: {\n        'Content-Type': 'multipart/form-data; charset=utf-8; boundary=__X_PAW_BOUNDARY__'\n      }\n    }).then(response => {\n      setResponse(response.result);\n      setStatus(response.status);\n      setLoading(false);\n    }).catch(e => {\n      // handling errors\n      setLoading(false);\n      console.log(e.response);\n      setBadRequest({\n        httpCode: e.response.status,\n        msg: e.response.data.msg\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, \"Example of posting data\"), loading && /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }), showForm && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: postData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Titre\",\n    onChange: e => {\n      setFormPayload({ ...formPayload,\n        title: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Description\",\n    onChange: e => {\n      setFormPayload({ ...formPayload,\n        description: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Company\",\n    onChange: e => {\n      setFormPayload({ ...formPayload,\n        company: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    placeholder: \"File\",\n    onChange: e => {\n      setFormPayload({ ...formPayload,\n        file: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"Submit\")), response && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, \"Submitted successfully\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"Response: \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  }, JSON.stringify(response))), status && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Status: \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 23\n    }\n  }, JSON.stringify(status)))), badRequest && /*#__PURE__*/React.createElement(\"div\", {\n    class: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  }, badRequest.httpCode, \" error\"), badRequest.httpCode === '400' && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"API-endpoint is not configured properly.\"), badRequest.httpCode === '403' && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"You have to be logged in to submit this form.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, badRequest.msg))), !showForm && !loading && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, \"Submit again\"));\n}","map":{"version":3,"sources":["C:/Users/Hugo/code/akatek/directual/src/pages/AdminPage.js"],"names":["React","useState","Directual","useAuth","Loader","api","apiHost","AdminPage","dataStructure","endpoint","auth","response","setResponse","status","setStatus","badRequest","setBadRequest","loading","setLoading","showForm","setShowForm","formPayload","setFormPayload","resetForm","userID","user","postData","structure","setData","sessionID","then","result","catch","e","console","log","httpCode","msg","data","postData2","fetch","method","body","JSON","stringify","id","title","headers","target","value","description","company","file"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport Directual from 'directual-api'\r\nimport { useAuth } from '../auth'\r\nimport { Loader } from '../components/loader/loader'\r\n\r\n// Example of posting data to Directual\r\n\r\n// Connect to Directual api\r\nconst api = new Directual({ apiHost: '/' })\r\n\r\nexport default function AdminPage() {\r\n  // API-endpoint details\r\n  const dataStructure = 'product' // todo: write here sysname of your data structure\r\n  const endpoint = 'postProduct' // todo: write here Method name of your API-endpoint\r\n\r\n  // Connect authentication context\r\n  const auth = useAuth()\r\n\r\n  // Hooks for handling state\r\n  const [response, setResponse] = useState() // API response\r\n  const [status, setStatus] = useState() // Request status\r\n  const [badRequest, setBadRequest] = useState() // API error message\r\n  const [loading, setLoading] = useState(false) // Loader\r\n  const [showForm, setShowForm] = useState(true) // Show/hide the form\r\n  const [formPayload, setFormPayload] = useState() // Data to send. Here we can add userID: auth.user by default\r\n\r\n  // Reset the form\r\n  const resetForm = () => {\r\n    setResponse()\r\n    setStatus()\r\n    setBadRequest()\r\n    setShowForm(true)\r\n    setFormPayload({ userID: auth.user }) // Don't forget to include userID: auth.user, if needed\r\n  }\r\n\r\n  // POST-request\r\n  function postData() {\r\n    setLoading(true)\r\n    setShowForm(false)\r\n    api\r\n      // Data structure\r\n      .structure(dataStructure)\r\n      // POST request + payload + query params:\r\n      .setData(endpoint, formPayload, { sessionID: auth.sessionID })\r\n      .then((response) => {\r\n        setResponse(response.result)\r\n        setStatus(response.status)\r\n        setLoading(false)\r\n      })\r\n      .catch((e) => {\r\n        // handling errors\r\n        setLoading(false)\r\n        console.log(e.response)\r\n        setBadRequest({\r\n          httpCode: e.response.status,\r\n          msg: e.response.data.msg\r\n        })\r\n      })\r\n  }\r\n\r\n  function postData2() {\r\n    //    var data = new FormData();\r\n    //    var imagedata = document.querySelector('input[type=\"file\"]').files[0];\r\n    //    data.append(\"data\", imagedata);\r\n    //    fetch(`https://api.directual.com/good/api/v5/data/product/postProduct?appID=445e7531-8fc5-44ad-9402-2668a9bf7365&sessionID=${auth.sessionID}`, {\r\n    //      mode: 'no-cors',\r\n    //      method: \"POST\",\r\n    //      headers: {\r\n    //       'Content-Type': 'multipart/form-data; charset=utf-8; boundary=__X_PAW_BOUNDARY__'\r\n    //   }\r\n    //    }).then(function (res) {\r\n    //      if (res.ok) {\r\n    //        alert(\"Perfect! \");\r\n    //      } else if (res.status === 401) {\r\n    //        alert(\"Oops! \");\r\n    //      }\r\n    //    }, function (e) {\r\n    //      alert(\"Error submitting form!\");\r\n    //    });\r\n    //  }\r\n    setLoading(true)\r\n    setShowForm(false)\r\n    fetch(\r\n      `http://localhost:3000/good/api/v5/data/product/postProduct?apiHost=%2F&sessionID=${auth.sessionID}`,\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({ id: formPayload.id, title: formPayload.title,  }),\r\n        headers: {\r\n          'Content-Type':\r\n            'multipart/form-data; charset=utf-8; boundary=__X_PAW_BOUNDARY__'\r\n        }\r\n      }\r\n    ).then((response) => {\r\n      setResponse(response.result)\r\n      setStatus(response.status)\r\n      setLoading(false)\r\n    })\r\n    .catch((e) => {\r\n      // handling errors\r\n      setLoading(false)\r\n      console.log(e.response)\r\n      setBadRequest({\r\n        httpCode: e.response.status,\r\n        msg: e.response.data.msg\r\n      })\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      <h1>Example of posting data</h1>\r\n      {loading && <Loader />}\r\n      {showForm && (\r\n        <form onSubmit={postData} >\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Titre\"\r\n            onChange={(e) => {\r\n              setFormPayload({ ...formPayload, title: e.target.value })\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Description\"\r\n            onChange={(e) => {\r\n              setFormPayload({ ...formPayload, description: e.target.value })\r\n            }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Company\"\r\n            onChange={(e) => {\r\n              setFormPayload({ ...formPayload, company: e.target.value })\r\n            }}\r\n          />\r\n          <input\r\n            type=\"file\"\r\n            placeholder=\"File\"\r\n            onChange={(e) => {\r\n              setFormPayload({ ...formPayload, file: e.target.value })\r\n            }}\r\n          />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      )}\r\n\r\n      {/* Everything is OK */}\r\n      {response && (\r\n        <div>\r\n          <b>Submitted successfully</b>\r\n          <p>\r\n            Response: <code>{JSON.stringify(response)}</code>\r\n          </p>\r\n          {status && (\r\n            <p>\r\n              Status: <code>{JSON.stringify(status)}</code>\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Something went wrong */}\r\n      {badRequest && (\r\n        <div class=\"error\">\r\n          <b>{badRequest.httpCode} error</b>\r\n          {badRequest.httpCode === '400' && (\r\n            <p>API-endpoint is not configured properly.</p>\r\n          )}\r\n          {badRequest.httpCode === '403' && (\r\n            <p>You have to be logged in to submit this form.</p>\r\n          )}\r\n          <p>\r\n            <code>{badRequest.msg}</code>\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Reset the form */}\r\n      {!showForm && !loading && (\r\n        <button onClick={resetForm}>Submit again</button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}