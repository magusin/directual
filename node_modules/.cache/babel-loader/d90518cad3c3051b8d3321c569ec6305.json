{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hugo\\\\code\\\\akatek\\\\directual\\\\directual-react-boilerplate\\\\src\\\\pages\\\\login.js\";\nimport { useHistory, useLocation } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../auth';\nimport { Loader } from '../components/loader/loader';\nexport default function LoginPage() {\n  let history = useHistory();\n  let location = useLocation();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  let {\n    from\n  } = location.state || {\n    from: {\n      pathname: '/'\n    }\n  };\n  const auth = useAuth();\n  useEffect(() => {\n    if (auth.isAutorised()) {\n      history.replace(from);\n    }\n  });\n\n  let login = e => {\n    e.preventDefault();\n    setLoading(true);\n    auth.login(username, password).then(() => {\n      history.replace(from);\n      setLoading(false);\n    }).catch(e => {\n      setError('You login or password is incorrect');\n      setLoading(false);\n    });\n    return false;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"You must log in to view the page \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 45\n    }\n  }, from.pathname)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"login\",\n    onChange: e => {\n      setUsername(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"password\",\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, error), !loading ? /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Log in\") : /*#__PURE__*/React.createElement(Loader, {\n    text: \"Logging in...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 47\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Hugo/code/akatek/directual/directual-react-boilerplate/src/pages/login.js"],"names":["useHistory","useLocation","React","useState","useEffect","useAuth","Loader","LoginPage","history","location","username","setUsername","password","setPassword","loading","setLoading","error","setError","from","state","pathname","auth","isAutorised","replace","login","e","preventDefault","then","catch","target","value"],"mappings":"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","sourcesContent":["import { useHistory, useLocation } from 'react-router-dom'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useAuth } from '../auth'\r\n\r\nimport { Loader } from '../components/loader/loader'\r\n\r\nexport default function LoginPage () {\r\n  let history = useHistory()\r\n  let location = useLocation()\r\n\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n\r\n  let { from } = location.state || { from: { pathname: '/' } }\r\n  const auth = useAuth()\r\n\r\n  useEffect(() => {\r\n    if (auth.isAutorised()) {\r\n      history.replace(from)\r\n    }\r\n  })\r\n  let login = (e) => {\r\n    e.preventDefault()\r\n    setLoading(true)\r\n    auth.login(username, password).then(() => {\r\n      history.replace(from)\r\n      setLoading(false)\r\n    }).catch(e => {\r\n      setError('You login or password is incorrect')\r\n      setLoading(false)\r\n    })\r\n    return false\r\n  }\r\n\r\n  return (\r\n    <div className=\"content form\">\r\n      { /* Here is from path: */}\r\n      <form onSubmit={login}>\r\n        <p>You must log in to view the page <b>{from.pathname}</b></p>\r\n        <input type=\"text\" placeholder=\"login\" onChange={(e) => {\r\n          setUsername(e.target.value)\r\n        }}/>\r\n        <input type=\"password\" placeholder=\"password\" onChange={(e) => {\r\n          setPassword(e.target.value)\r\n        }}/>\r\n        {error && <div className=\"error\">{error}</div>}\r\n        {!loading ? <button>Log in</button> : <Loader text='Logging in...'/>}\r\n      </form>\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}