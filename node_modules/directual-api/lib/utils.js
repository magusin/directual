"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _ = require("lodash");
/**
 * Returns true if the specified value is not undefined.
 *
 * @param val Variable to test.
 * @return Whether variable is defined.
 */
function isDef(val) {
    // void 0 always evaluates to undefined and hence we do not need to depend on
    // the definition of the global variable named 'undefined'.
    return val !== void 0;
}
exports.isDef = isDef;
function isEmptyString(val) {
    return val.trim().length === 0;
}
exports.isEmptyString = isEmptyString;
function isNotEmptyString(val) {
    return val.trim().length > 0;
}
exports.isNotEmptyString = isNotEmptyString;
function isNotEmpty(val) {
    return _.isEmpty(val) === false;
}
exports.isNotEmpty = isNotEmpty;
/**
 * Compare function for string values by field.
 * @return {function(*, *):number}
 */
function compareStringByField(fieldName) {
    return function (a, b) { return a[fieldName].localeCompare(b[fieldName], undefined, { numeric: true }); };
}
exports.compareStringByField = compareStringByField;
/**
 * Number of digits greater than argument.
 *
 * Gets count of digits and compare with argument.
 * Note: this works only with integers, not floats.
 */
function numberOfDigitsGreaterThan(val, digitsCount) {
    return val.toString().length > digitsCount;
}
exports.numberOfDigitsGreaterThan = numberOfDigitsGreaterThan;
/**
 * Extract `obj` from directual response.
 */
function extractResponseObject(response) {
    return _.get(response, 'obj', {});
}
exports.extractResponseObject = extractResponseObject;
/**
 * Extract array result from directual response.
 */
function extractResponseArray(response) {
    return _.get(response, 'result.list', []);
}
exports.extractResponseArray = extractResponseArray;
/**
 * Extract data from axios response.
 * @param {AxiosResponse} response
 * @return {*}
 */
function extractResponseData(response) {
    return response.data;
}
exports.extractResponseData = extractResponseData;
/**
 * Convert string to array.
 */
function stringToArray(val) {
    if (val.length === 0)
        return [];
    return val.split(',');
}
exports.stringToArray = stringToArray;
//# sourceMappingURL=utils.js.map